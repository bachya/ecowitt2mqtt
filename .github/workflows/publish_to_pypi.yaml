---
name: "Publish to Docker Hub"

on:
  pull_request:
    branches: dev
  push:
    branches:
      - dev
      - master
    tags:
      - "*"

jobs:
  publish_to_docker_hub:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Prep
        run: |
          DOCKER_IMAGE=bachya/ecowitt2mqtt
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          VERSION=dev

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi

          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
          fi

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} --file ./Dockerfile .

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3kk

      - name: Docker Buildx (build)
        run: |
          docker buildx build \
            --output "type=image,push=false" \
            ${{ steps.prepare.outputs.buildx_args }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Docker Buildx (push)
        if: success()
        run: |
          docker buildx build \
            --output "type=image,push=true" \
           ${{ steps.prepare.outputs.buildx_args }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect \
          ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
