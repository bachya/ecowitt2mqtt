[build-system]
requires = ["setuptools >= 35.0.2", "wheel >= 0.29.0", "poetry>=0.12"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py39"]

[tool.coverage.report]
exclude_lines = ["TYPE_CHECKING", "ImportError", "NotImplementedError", "handle_exit_signal"]
fail_under = 100
show_missing = true

[tool.coverage.run]
omit = ["ecowitt2mqtt/backports/*"]
source = ["ecowitt2mqtt"]

[tool.isort]
known_first_party = "ecowitt2mqtt,examples,tests"
multi_line_output = 3
profile = "black"

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "silent"
ignore_missing_imports = true
no_implicit_optional = true
platform = "linux"
plugins = ["pydantic.mypy"]
python_version = "3.12"
show_error_codes = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry]
name = "ecowitt2mqtt"
version = "2024.04.0"
description = "A small web server to send data from Ecowitt devices to an MQTT Broker"
readme = "README.md"
authors = ["Aaron Bach <bachya1208@gmail.com>"]
license = "MIT"
repository = "https://github.com/bachya/ecowitt2mqtt"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

[tool.poetry.dependencies]
"ruamel.yaml" = ">=0.18.5"
"ruamel.yaml.clib" = ">=0.2.8,<0.3.0"
aiohttp = ">=3.9.0b0"
aiomqtt = ">=1,<3"
certifi = ">=2023.07.22"
colorlog = "^6.6.0"
fastapi = ">=0.89.1,<0.111.0"
frozenlist = "^1.4.0"
meteocalc = "^1.1.0"
python = "^3.10"
python-multipart = ">=0.0.5,<0.0.10"
rapidfuzz = ">=2.13,<4.0"
urllib3 = ">=1.26.18"
uvicorn = ">=0.19.0"
uvloop = ">=0.17,<0.20"
yarl = ">=1.9.2"
pydantic = "^2.5.3"

[tool.poetry.group.dev.dependencies]
GitPython = ">=3.1.35"
Pygments = ">=2.15.0"
aresponses = ">=2.1.6,<4.0.0"
blacken-docs = "^1.12.1"
codespell = "^2.2.2"
coverage = {version = ">=6.5,<8.0", extras = ["toml"]}
darglint = "^1.8.1"
isort = "^5.10.1"
mypy = "^1.2.0"
pre-commit = ">=2.20,<4.0"
pre-commit-hooks = "^4.3.0"
pylint = ">=2.15.5,<4.0.0"
pytest = ">=7.2,<9.0"
pytest-aiohttp = "^1.0.0"
pytest-asyncio = ">=0.20.1,<0.24.0"
pytest-cov = ">=4,<6"
pyupgrade = "^3.1.0"
pyyaml = "^6.0.1"
requests = ">=2.31.0"
ruff = ">=0.0.261,<0.4.2"
typing-extensions = "^4.8.0"
vulture = "^2.6"
yamllint = "^1.28.0"

[tool.poetry.scripts]
ecowitt2mqtt = "ecowitt2mqtt.__main__:main"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/bachya/ecowitt2mqtt/issues"
Changelog = "https://github.com/bachya/ecowitt2mqtt/releases"

[tool.pylint.BASIC]
expected-line-ending-format = "LF"

[tool.pylint.DESIGN]
max-attributes = 20

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pylint.MASTER]
ignore = [
  "tests",
]
load-plugins = [
  "pylint.extensions.bad_builtin",
  "pylint.extensions.code_style",
  "pylint.extensions.docparams",
  "pylint.extensions.docstyle",
  "pylint.extensions.empty_comment",
  "pylint.extensions.overlapping_exceptions",
  "pylint.extensions.typing",
]

[tool.pylint."MESSAGES CONTROL"]
# Reasons disabled:
# duplicate-code – The tests contain a lot of duplicated data payloads
# invalid-enum-extension – We need to backport StrEnums until we drop Python 3.10
# too-many-lines – We deal with a lot of data, so tests can be large
# unnecessary-pass - This can hurt readability
disable = [
  "duplicate-code",
  "invalid-enum-extension",
  "too-many-lines",
  "unnecessary-pass"
]

[tool.pylint.REPORTS]
score = false

[tool.pylint.SIMILARITIES]
# Minimum lines number of a similarity.
# We set this higher because of tests where data payloads look similar.
min-similarity-lines = 20

# Ignore comments when computing similarities.
ignore-comments = true

# Ignore docstrings when computing similarities.
ignore-docstrings = true

# Ignore imports when computing similarities.
ignore-imports = true

[tool.vulture]
min_confidence = 80
paths = ["ecowitt2mqtt", "tests"]
verbose = false
